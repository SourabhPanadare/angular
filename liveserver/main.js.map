{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/book-create/book-create.component.css","webpack:///./src/app/book-create/book-create.component.html","webpack:///./src/app/book-create/book-create.component.ts","webpack:///./src/app/book-detail/book-detail.component.css","webpack:///./src/app/book-detail/book-detail.component.html","webpack:///./src/app/book-detail/book-detail.component.ts","webpack:///./src/app/book-edit/book-edit.component.css","webpack:///./src/app/book-edit/book-edit.component.html","webpack:///./src/app/book-edit/book-edit.component.ts","webpack:///./src/app/book/book.component.css","webpack:///./src/app/book/book.component.html","webpack:///./src/app/book/book.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { environment } from '../environments/environment';\n\nconst apiUrl = environment.apiBaseUrl+'/api';\nconst userApiUrl = environment.apiBaseUrl+'/userapi';\nconst userRegisterUrl = userApiUrl + '/register';\nconst userLoginUrl = userApiUrl + '/login';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  httpOptions = {headers: new HttpHeaders({'Content-Type': 'application/json'}) };\n  noAuthHeader = { headers: new HttpHeaders({ 'NoAuth': 'True' }) };\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getBooks(): Observable<any> {\n    return this.http.get(apiUrl, this.httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getBook(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, this.httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postBook(data): Observable<any> {\n    return this.http.post(apiUrl, data, this.httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateBook(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, this.httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteBook(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, this.httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  postUserLogin(data): Observable<any> {\n    return this.http.post(userLoginUrl, data, this.noAuthHeader)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  postUserRegister(data): Observable<any> {\n    return this.http.post(userRegisterUrl, data, this.noAuthHeader)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n  //Helper Methods\n\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  deleteToken() {\n    localStorage.removeItem('token');\n  }\n\n  getUserPayload() {\n    var token = this.getToken();\n    if (token) {\n      var userPayload = atob(token.split('.')[1]);\n      return JSON.parse(userPayload);\n    }\n    else\n      return null;\n  }\n\n  isLoggedIn() {\n    var userPayload = this.getUserPayload();\n    if (userPayload)\n      return userPayload.exp > Date.now() / 1000;\n    else\n      return false;\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularbookkeeping';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HashLocationStrategy, LocationStrategy, PathLocationStrategy } from '@angular/common';\n\nimport { MaterialModule } from './material.module';\n\nimport { AppComponent } from './app.component';\n\nimport { ApiService } from './api.service';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { BookEditComponent } from './book-edit/book-edit.component';\nimport { BookDetailComponent } from './book-detail/book-detail.component';\nimport { BookCreateComponent } from './book-create/book-create.component';\nimport { BookComponent } from './book/book.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'books',\n    component: BookComponent,\n    data: { title: 'Book List' },\n    canActivate:[AuthGuard]\n  },\n  {\n    path: 'book-details/:id',\n    component: BookDetailComponent,\n    data: { title: 'Book Details' }\n  },\n  {\n    path: 'book-create',\n    component: BookCreateComponent,\n    data: { title: 'Create Book' }\n  },\n  {\n    path: 'book-edit/:id',\n    component: BookEditComponent,\n    data: { title: 'Edit Book' }\n  },\n  {\n    path: '',\n    component: LoginComponent,\n    data: { title: 'Login Form' }\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    data: { title: 'Register' }\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HeaderComponent,\n    FooterComponent,\n    BookEditComponent,\n    BookDetailComponent,\n    BookCreateComponent,\n    BookComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes,{ useHash: false }),\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    AuthGuard,\n    ApiService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from '../api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private apiService : ApiService,private router : Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if (!this.apiService.isLoggedIn()) {\n        this.router.navigateByUrl('/');\n        this.apiService.deleteToken();\n        return false;\n      }\n    return true;\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from '../api.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private apiService : ApiService, private router : Router){}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n        if (req.headers.get('noauth'))\n            return next.handle(req.clone());\n        else {\n            const clonedreq = req.clone({\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + this.apiService.getToken())\n            });\n            return next.handle(clonedreq).pipe(\n                tap(\n                    event => { },\n                    err => {\n                        if (err.error.auth == false) {\n                            this.router.navigateByUrl('/');\n                        }\n                    })\n            );\n        }\n    }\n}\n","module.exports = \"mat-card , mat-toolbar{\\n  max-width: calc(100vw - 750px);\\n  margin: 85px auto 0;\\n  text-align: center;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n  padding-bottom:2em;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n  text-align: left;\\n}\\n\\n.button-row button:nth-child(2){\\n  float:right;\\n}\\n\\n@media(max-width:992px){\\n\\tmat-card , mat-toolbar{\\n\\t\\tmax-width:100%;\\n\\t}\\n}\\n\"","module.exports = \"<mat-card class=\\\"my-card\\\">\\n   <mat-card-content>\\n      <form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"onFormSubmit(bookForm.value)\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"ISBN\\\" formControlName=\\\"isbn\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('isbn').valid && bookForm.get('isbn').touched\\\">Please enter ISBN</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('title').valid && bookForm.get('title').touched\\\">Please enter Book Title</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <!-- <app-material-file-upload (complete)=\\\"onFileComplete($event)\\\"></app-material-file-upload> -->\\n          <input matInput placeholder=\\\"Image\\\" formControlName=\\\"image\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('image').valid && bookForm.get('image').touched\\\">Please enter Book Image</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('author').valid && bookForm.get('author').touched\\\">Please enter Book Author</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('description').valid && bookForm.get('description').touched\\\">Please enter Book Description</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Published Year\\\" formControlName=\\\"published_year\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('published_year').valid && bookForm.get('published_year').touched\\\">Please enter Published Year</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Publisher\\\" formControlName=\\\"publisher\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('publisher').valid && bookForm.get('publisher').touched\\\">Please enter Publisher</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <div class=\\\"button-row\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"!bookForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n          <button mat-raised-button [routerLink]=\\\"['/books']\\\" color=\\\"primary\\\"><mat-icon>arrow_back</mat-icon></button>\\n        </div>\\n      </form>\\n    </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-book-create',\n  templateUrl: './book-create.component.html',\n  styleUrls: ['./book-create.component.css']\n})\nexport class BookCreateComponent implements OnInit {\n\n  bookForm: FormGroup;\n  isbn:string='';\n  title:string='';\n  image:string='';\n  description:string='';\n  author:string='';\n  publisher:string='';\n  published_year:string='';\n\n  constructor(private router: Router, private api: ApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.bookForm = this.formBuilder.group({\n      'isbn' : [null, Validators.required],\n      'title' : [null, Validators.required],\n      'image' : [null, Validators.required],\n      'author' : [null, Validators.required],\n      'description' : [null, Validators.required],\n      'published_year' : [null, Validators.required],\n      'publisher' : [null, Validators.required]\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.api.postBook(form)\n      .subscribe(res => {\n          let id = res.bookresult['_id'];\n          this.router.navigate(['/book-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n\n}\n","module.exports = \"mat-card , mat-toolbar{\\n  max-width: calc(100vw - 750px);\\n  margin: 85px auto 0;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n  padding-bottom:2em;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\\nmat-card-actions a:nth-child(3){\\n  float:right;\\n}\\n\\n.list-header{\\n  float:left;\\n}\\n\\n.list-para{\\n  float:right;\\n  margin-left:5px;\\n}\\n\\n@media(max-width:992px){\\n\\tmat-card , mat-toolbar{\\n\\t\\tmax-width:96%;\\n\\t\\tmargin:auto;\\n\\t}\\n\\n\\tmat-grid-tile{\\n\\t\\twidth:100% !important;\\n\\t}\\n}\\n\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n\\n  <mat-card-header>\\n    <mat-card-title><h2>{{book.title}}</h2></mat-card-title>\\n    <mat-card-subtitle>{{book.description}}</mat-card-subtitle>\\n  </mat-card-header>\\n\\n  <mat-card-content>\\n    <mat-grid-list [cols]=\\\"breakpoint\\\" (window:resize)=\\\"onResize($event)\\\" rowHeight=\\\"2:3\\\">\\n\\n      <mat-grid-tile>\\n        <img src=\\\"assets/{{book.image}}\\\"/>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-list>\\n          <mat-list-item>\\n            <h3 class=\\\"list-header\\\">ISBN:</h3>\\n            <p class=\\\"list-para\\\">{{book.isbn}}</p>\\n          </mat-list-item>\\n          <mat-list-item>\\n            <h3 class=\\\"list-header\\\">Author:</h3>\\n            <p class=\\\"list-para\\\">{{book.author}}</p>\\n          </mat-list-item>\\n          <mat-list-item>\\n            <h3 class=\\\"list-header\\\">Publisher:</h3>\\n            <p class=\\\"list-para\\\">{{book.publisher}}</p>\\n          </mat-list-item>\\n           <mat-list-item>\\n            <h3 class=\\\"list-header\\\">Publish Year:</h3>\\n            <p class=\\\"list-para\\\">{{book.published_year}}</p>\\n          </mat-list-item>\\n          <mat-list-item>\\n            <h3 class=\\\"list-header\\\">Update Date:</h3>\\n            <p class=\\\"list-para\\\">{{book.updated_date | date}}</p>\\n          </mat-list-item>\\n        </mat-list>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n  </mat-card-content>\\n\\n  <mat-card-actions>\\n      <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/book-edit', book._id]\\\"><mat-icon>edit</mat-icon></a>\\n      <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteBook(book._id)\\\"><mat-icon>delete</mat-icon></a>\\n      <a mat-raised-button [routerLink]=\\\"['/books']\\\" color=\\\"primary\\\"><mat-icon>arrow_back</mat-icon></a>\\n  </mat-card-actions>\\n\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-book-detail',\n  templateUrl: './book-detail.component.html',\n  styleUrls: ['./book-detail.component.css']\n})\nexport class BookDetailComponent implements OnInit {\n\n  book = <any>{};\n  breakpoint: number;\n\n  constructor(private route: ActivatedRoute, private api: ApiService, private router: Router) { }\n\n  ngOnInit() {\n    this.getBookDetails(this.route.snapshot.params['id']);\n    this.breakpoint = (window.innerWidth <= 400) ? 1 : 2;\n  }\n\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth <= 400) ? 1 : 2;\n  }\n\n  getBookDetails(id) {\n   this.api.getBook(id)\n     .subscribe(data => {\n       this.book = data.bookresult;\n     });\n  }\n\n  deleteBook(id) {\n    this.api.deleteBook(id)\n      .subscribe(res => {\n          this.router.navigate(['/books']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n}\n","module.exports = \"mat-card , mat-toolbar{\\n  max-width: calc(100vw - 750px);\\n  margin: 85px auto 0;\\n  text-align: center;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n  padding-bottom:2em;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n  text-align: left;\\n}\\n\\n.button-row button:nth-child(2){\\n  float:right;\\n}\\n\\n@media(max-width:992px){\\n\\tmat-card , mat-toolbar{\\n\\t\\tmax-width:100%;\\n\\t}\\n}\\n\"","module.exports = \"<mat-card class=\\\"my-card\\\">\\n   <mat-card-content>\\n      <form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"onFormSubmit(bookForm.value)\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"ISBN\\\" formControlName=\\\"isbn\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('isbn').valid && bookForm.get('isbn').touched\\\">Please enter ISBN</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('title').valid && bookForm.get('title').touched\\\">Please enter Book Title</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('author').valid && bookForm.get('author').touched\\\">Please enter Book Author</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('description').valid && bookForm.get('description').touched\\\">Please enter Book Description</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Publisher\\\" formControlName=\\\"publisher\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('publisher').valid && bookForm.get('publisher').touched\\\">Please enter Publisher</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Published Year\\\" formControlName=\\\"published_year\\\">\\n          <mat-error>\\n            <span *ngIf=\\\"!bookForm.get('published_year').valid && bookForm.get('published_year').touched\\\">Please enter Published Year</span>\\n          </mat-error>\\n        </mat-form-field>\\n        <div class=\\\"button-row\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"!bookForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n          <button mat-raised-button (click)=\\\"bookDetails()\\\" color=\\\"primary\\\"><mat-icon>arrow_back</mat-icon></button>\\n        </div>\\n      </form>\\n    </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { ApiService } from '../api.service';\n@Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.css']\n})\nexport class BookEditComponent implements OnInit {\n\n  bookForm: FormGroup;\n  id:string = '';\n  isbn:string = '';\n  title:string = '';\n  description:string = '';\n  author:string = '';\n  publisher:string = '';\n  published_year:string = '';\n\n  constructor(private router: Router, private route: ActivatedRoute, private api: ApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.getBook(this.route.snapshot.params['id']);\n    this.bookForm = this.formBuilder.group({\n      'isbn' : [null, Validators.required],\n      'title' : [null, Validators.required],\n      'description' : [null, Validators.required],\n      'author' : [null, Validators.required],\n      'publisher' : [null, Validators.required],\n      'published_year' : [null, Validators.required]\n    });\n  }\n\n  getBook(id) {\n    this.api.getBook(id).subscribe(data => {\n      this.id = data.bookresult._id;\n      this.bookForm.setValue({\n        isbn: data.bookresult.isbn,\n        title: data.bookresult.title,\n        description: data.bookresult.description,\n        author: data.bookresult.author,\n        publisher: data.bookresult.publisher,\n        published_year: data.bookresult.published_year\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.api.updateBook(this.id, form)\n      .subscribe(res => {\n          let id = res.bookresult['_id'];\n          this.router.navigate(['/book-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  bookDetails() {\n    this.router.navigate(['/book-details', this.id]);\n  }\n\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.mat-cell{\\n  cursor:pointer;\\n}\\n\\n.mat-cell:nth-child(1), .mat-cell:nth-child(3),\\n.mat-header-cell:nth-child(1), .mat-header-cell:nth-child(3) {\\n  width:25%;\\n}\\n\\n.mat-cell:nth-child(2),\\n.mat-header-cell:nth-child(2) {\\n  width:40%;\\n}\\n\\n.mat-cell:nth-child(4),\\n.mat-header-cell:nth-child(4) {\\n  width:10%;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/book-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"isbn\\\">\\n      <th mat-header-cell *matHeaderCellDef> ISBN </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"isbn-col\\\"> {{element.isbn}} </td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef> Title </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"author\\\">\\n      <th mat-header-cell *matHeaderCellDef> Author </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.author}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"info\\\">\\n      <th mat-header-cell *matHeaderCellDef> Info </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <i class=\\\"material-icons\\\">more_horiz</i></td>\\n    </ng-container>\\n\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/book-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\n\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n\n  displayedColumns = ['isbn', 'title', 'author', 'info'];\n  dataSource = new MatTableDataSource();\n\n  constructor(private api: ApiService) { }\n\n  ngOnInit() {\n    this.api.getBooks()\n    .subscribe(res => {\n      this.dataSource = res.bookresult;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-spacer {\\n  flex: 1 1 auto;\\n}\\n\\na{\\n\\ttext-decoration: none;\\n    color: #fff;\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n<mat-toolbar-row>\\n   <a [routerLink]=\\\"['/books']\\\" >Book Keeping</a>\\n\\n    <span class=\\\"example-fill-remaining-space\\\"></span>\\n    <span class=\\\"align-center\\\"></span>\\n    <span class=\\\"example-spacer\\\"></span>\\n\\n    <button mat-button (click)=\\\"logout()\\\"><i class=\\\"material-icons\\\">power_settings_new</i> Logout</button>\\n </mat-toolbar-row>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private router: Router, private apiService: ApiService) { }\n\n  ngOnInit() {\n  }\n\n  logout() : void {\n      this.apiService.deleteToken();\n      this.router.navigate([\"/\"]);\n   }\n\n}\n","module.exports = \"mat-card , mat-toolbar{\\n  max-width: 500px;\\n  margin: 150px auto 0;\\n  text-align: center;\\n}\\n.example-full-width {\\n  width: 100%;\\n  padding-bottom:2em;\\n}\\n.login-button{\\n  margin-bottom:2em !important;\\n}\\nh1{\\n  text-transform:capitalize;\\n  color:#3f51b5;\\n}\\n@media(max-width:991px){\\n  mat-card , mat-toolbar{\\n    margin:50px auto 0;\\n  }\\n}\\n\"","module.exports = \"<mat-card class=\\\"my-card\\\">\\n   <mat-card-content>\\n        <form class=\\\"login-form\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onFormSubmit(userForm.value)\\\">\\n          <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\" *ngIf=\\\"message !== ''\\\">\\n      \\t\\t  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n      \\t\\t  {{message}}\\n      \\t\\t</div>\\n          <h1>Please login to continue</h1>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Enter Your Email\\\"  name=\\\"usermail\\\" formControlName=\\\"email\\\" required>\\n            <mat-error>\\n              <span *ngIf=\\\"!userForm.get('email').valid && userForm.get('email').touched\\\">Please Enter Your Email ID</span>\\n            </mat-error>\\n            <mat-error>\\n              <span *ngIf=\\\"userForm.get('email').errors?.serverError\\\">{{ userForm.get('email').errors?.serverError }}</span>\\n            </mat-error>\\n            <!-- <mat-error *ngIf=\\\"email.invalid\\\">{{getEmailErrorMessage()}}</mat-error> -->\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Enter Your Password\\\" type=\\\"password\\\" name=\\\"userpassword\\\" formControlName=\\\"password\\\" required>\\n            <mat-error>\\n              <span *ngIf=\\\"!userForm.get('password').valid && userForm.get('password').touched\\\">Please Enter Your Password</span>\\n            </mat-error>\\n            <!-- <mat-error *ngIf=\\\"password.invalid\\\">{{getPasswordErrorMessage()}}</mat-error> -->\\n          </mat-form-field>\\n          <mat-card-actions>\\n             <button class=\\\"login-button\\\" type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n             <button class=\\\"register-button\\\" (click)=\\\"register()\\\" mat-button color=\\\"warn\\\">Register</button>\\n          </mat-card-actions>\\n        </form>\\n   </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { tap, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs/observable/of';\n\nimport {MatDialog} from '@angular/material';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  userForm: FormGroup;\n  email: string = '';\n  message = '';\n  data: any;\n\n  constructor(private router: Router, private apiService: ApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.userForm = this.formBuilder.group({\n      'email' : [null, [Validators.required, Validators.email]],\n      'password' : [null, Validators.required]\n    });\n    if(this.apiService.isLoggedIn()){\n      this.router.navigateByUrl('/books');\n    }\n  }\n  onFormSubmit(form:NgForm) {\n    this.apiService.postUserLogin(form)\n    .subscribe(res => {\n        this.apiService.setToken(res['token']);\n        this.router.navigateByUrl('/books');\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n   register(){\n     this.router.navigate(['/register']);\n   }\n\n   private handleError<T> (operation = 'operation', result?: T) {\n     return (error: any): Observable<T> => {\n       console.error(error); // log to console instead\n       console.log(`${operation} failed: ${error.message}`);\n       return of(result as T);\n     };\n   }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\n\n\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n  CdkTableModule,\n  CdkTreeModule,\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatStepperModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule\n  ],\n  exports: [\n  CdkTableModule,\n  CdkTreeModule,\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatStepperModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule\n  ]\n})\nexport class MaterialModule {}\n","module.exports = \"mat-card , mat-toolbar{\\n  max-width: 500px;\\n  margin: 150px auto 0;\\n  text-align: center;\\n}\\n.example-full-width {\\n  width: 100%;\\n  padding-bottom:2em;\\n}\\n.register-button{\\n  margin-bottom:2em !important;\\n}\\nh1{\\n  text-transform:uppercase;\\n  color:#3f51b5;\\n}\\n@media(max-width:991px){\\n  mat-card , mat-toolbar{\\n    margin:50px auto 0;\\n  }\\n}\\n\"","module.exports = \"<mat-card class=\\\"my-card\\\">\\n   <mat-card-content>\\n        <form class=\\\"register-form\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onFormSubmit(userForm.value)\\\">\\n          <h1>Register</h1>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Enter Your Name\\\"  name=\\\"fullname\\\" formControlName=\\\"fullname\\\" required>\\n            <mat-error>\\n              <span *ngIf=\\\"!userForm.get('fullname').valid && userForm.get('fullname').touched\\\">Please Enter Your Name</span>\\n            </mat-error>\\n            <!-- <mat-error *ngIf=\\\"firstname.invalid\\\">{{getFirstNameErrorMessage()}}</mat-error> -->\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Enter Your Email\\\"  name=\\\"usermail\\\" formControlName=\\\"email\\\" required>\\n            <mat-error>\\n              <span *ngIf=\\\"!userForm.get('email').valid && userForm.get('email').touched\\\">Please Enter Your Email ID</span>\\n            </mat-error>\\n            <!-- <mat-error *ngIf=\\\"email.invalid\\\">{{getEmailErrorMessage()}}</mat-error> -->\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Enter Your Password\\\" type=\\\"password\\\" name=\\\"userpassword\\\" formControlName=\\\"password\\\" required>\\n            <mat-error>\\n              <span *ngIf=\\\"!userForm.get('password').valid && userForm.get('password').touched\\\">Please Enter Your Password</span>\\n            </mat-error>\\n            <!-- <mat-error *ngIf=\\\"password.invalid\\\">{{getPasswordErrorMessage()}}</mat-error> -->\\n          </mat-form-field>\\n          <mat-card-actions>\\n             <button type=\\\"submit\\\" [disabled]=\\\"!userForm.valid\\\" mat-raised-button color=\\\"primary\\\">Register</button>\\n             <button class=\\\"cancel-button\\\" (click)=\\\"cancel()\\\" mat-button color=\\\"warn\\\">Cancel</button>\\n          </mat-card-actions>\\n        </form>\\n   </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material';\n\nimport { ApiService } from '../api.service';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  userForm: FormGroup;\n\n  constructor(private router: Router, private api: ApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.userForm = this.formBuilder.group({\n      'fullname' : [null, Validators.required],\n      'email' : [null, [Validators.required, Validators.email]],\n      'password' : [null, Validators.required]\n    });\n  }\n  onFormSubmit(form:NgForm) {\n    this.api.postUserRegister(form)\n    .subscribe(res => {\n      this.router.navigate(['/']);\n    }, (err) => {\n      console.log(err);\n    });\n  }\n  cancel(){\n    this.router.navigate(['/']);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'http://angularbookkeepingapi.sourabhportfolio.in'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}